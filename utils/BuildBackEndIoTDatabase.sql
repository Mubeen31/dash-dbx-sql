-- Databricks notebook source
-- MAGIC %md
-- MAGIC 
-- MAGIC # This notebook generates a full data pipeline from databricks dataset - iot-stream
-- MAGIC 
-- MAGIC ## This creates 2 tables: 
-- MAGIC 
-- MAGIC <b> Database: </b> plotly_iot_dashboard
-- MAGIC 
-- MAGIC <b> Tables: </b> silver_sensors, silver_users 
-- MAGIC 
-- MAGIC <b> Params: </b> StartOver (Yes/No) - allows user to truncate and reload pipeline

-- COMMAND ----------

-- MAGIC %sql
-- MAGIC CREATE DATABASE IF NOT EXISTS plotly_iot_dashboard;
-- MAGIC USE plotly_iot_dashboard;

-- COMMAND ----------

-- MAGIC %sql
-- MAGIC CREATE TABLE IF NOT EXISTS plotly_iot_dashboard.bronze_sensors
-- MAGIC (
-- MAGIC Id BIGINT GENERATED BY DEFAULT AS IDENTITY,
-- MAGIC device_id INT,
-- MAGIC user_id INT,
-- MAGIC calories_burnt DECIMAL(10,2), 
-- MAGIC miles_walked DECIMAL(10,2), 
-- MAGIC num_steps DECIMAL(10,2), 
-- MAGIC timestamp TIMESTAMP, 
-- MAGIC input_file_name STRING, 
-- MAGIC value STRING
-- MAGIC )
-- MAGIC USING DELTA 
-- MAGIC TBLPROPERTIES("delta.targetFileSize"="128mb")
-- MAGIC --LOCATION s3://<path>/

-- COMMAND ----------

-- MAGIC %sql
-- MAGIC CREATE TABLE IF NOT EXISTS plotly_iot_dashboard.bronze_users
-- MAGIC (
-- MAGIC userid BIGINT GENERATED BY DEFAULT AS IDENTITY,
-- MAGIC gender STRING,
-- MAGIC age INT,
-- MAGIC height DECIMAL(10,2), 
-- MAGIC weight DECIMAL(10,2),
-- MAGIC smoker STRING,
-- MAGIC familyhistory STRING,
-- MAGIC cholestlevs STRING,
-- MAGIC bp STRING,
-- MAGIC risk DECIMAL(10,2),
-- MAGIC input_file_name STRING,
-- MAGIC update_timestamp TIMESTAMP
-- MAGIC )
-- MAGIC USING DELTA 
-- MAGIC TBLPROPERTIES("delta.targetFileSize"="128mb")
-- MAGIC --LOCATION s3://<path>/

-- COMMAND ----------

-- DBTITLE 1,Incrementally Ingest Source Data from Raw Files
-- MAGIC %sql
-- MAGIC COPY INTO plotly_iot_dashboard.bronze_sensors
-- MAGIC FROM (SELECT 
-- MAGIC id::bigint AS Id,
-- MAGIC device_id::integer AS device_id,
-- MAGIC user_id::integer AS user_id,
-- MAGIC calories_burnt::decimal(10,2) AS calories_burnt, 
-- MAGIC miles_walked::decimal(10,2) AS miles_walked, 
-- MAGIC num_steps::decimal(10,2) AS num_steps, 
-- MAGIC timestamp::timestamp AS timestamp, 
-- MAGIC input_file_name() AS input_file_name, 
-- MAGIC value AS value
-- MAGIC FROM "/databricks-datasets/iot-stream/data-device/")
-- MAGIC FILEFORMAT = json
-- MAGIC COPY_OPTIONS('force'='true') --option to be incremental or always load all files

-- COMMAND ----------

-- DBTITLE 1,Create Silver Table for upserting updates
-- MAGIC %sql
-- MAGIC CREATE TABLE IF NOT EXISTS plotly_iot_dashboard.silver_sensors
-- MAGIC (
-- MAGIC Id BIGINT GENERATED BY DEFAULT AS IDENTITY,
-- MAGIC device_id INT,
-- MAGIC user_id INT,
-- MAGIC calories_burnt DECIMAL(10,2), 
-- MAGIC miles_walked DECIMAL(10,2), 
-- MAGIC num_steps DECIMAL(10,2), 
-- MAGIC timestamp TIMESTAMP, 
-- MAGIC input_file_name STRING, 
-- MAGIC value STRING
-- MAGIC )
-- MAGIC USING DELTA 
-- MAGIC TBLPROPERTIES("delta.targetFileSize"="128mb")
-- MAGIC --LOCATION s3://<path>/

-- COMMAND ----------

-- DBTITLE 1,Perform Upserts - Device Data
-- MAGIC %sql
-- MAGIC MERGE INTO plotly_iot_dashboard.silver_sensors AS target
-- MAGIC USING (SELECT Id::integer,
-- MAGIC               device_id::integer,
-- MAGIC               user_id::integer,
-- MAGIC               calories_burnt::decimal,
-- MAGIC               miles_walked::decimal,
-- MAGIC               num_steps::decimal,
-- MAGIC               timestamp::timestamp,
-- MAGIC               input_file_name::string,
-- MAGIC               value::string
-- MAGIC               FROM plotly_iot_dashboard.bronze_sensors) AS source
-- MAGIC ON source.Id = target.Id
-- MAGIC AND source.user_id = target.user_id
-- MAGIC AND source.device_id = target.device_id
-- MAGIC WHEN MATCHED THEN UPDATE SET 
-- MAGIC   target.calories_burnt = source.calories_burnt,
-- MAGIC   target.miles_walked = source.miles_walked,
-- MAGIC   target.num_steps = source.num_steps,
-- MAGIC   target.timestamp = source.timestamp
-- MAGIC WHEN NOT MATCHED THEN INSERT *;
-- MAGIC 
-- MAGIC --Truncate bronze batch once successfully loaded
-- MAGIC TRUNCATE TABLE plotly_iot_dashboard.bronze_sensors;

-- COMMAND ----------

-- DBTITLE 1,Table Optimizations
-- MAGIC %sql
-- MAGIC OPTIMIZE plotly_iot_dashboard.silver_sensors ZORDER BY (user_id, device_id, timestamp)

-- COMMAND ----------

-- MAGIC %md 
-- MAGIC 
-- MAGIC ## Ingest User Data As Well

-- COMMAND ----------

-- DBTITLE 1,Incrementally Ingest Raw User Data
-- MAGIC %sql
-- MAGIC COPY INTO plotly_iot_dashboard.bronze_users
-- MAGIC FROM (SELECT 
-- MAGIC userid::bigint AS userid,
-- MAGIC gender AS gender,
-- MAGIC age::integer AS age,
-- MAGIC height::decimal(10,2) AS height, 
-- MAGIC weight::decimal(10,2) AS weight,
-- MAGIC smoker AS smoker,
-- MAGIC familyhistory AS familyhistory,
-- MAGIC cholestlevs AS cholestlevs,
-- MAGIC bp AS bp,
-- MAGIC risk::decimal(10,2) AS risk,
-- MAGIC input_file_name() AS input_file_name,
-- MAGIC current_timestamp() AS update_timestamp
-- MAGIC FROM "/databricks-datasets/iot-stream/data-user/")
-- MAGIC FILEFORMAT = CSV
-- MAGIC FORMAT_OPTIONS('header'='true')
-- MAGIC COPY_OPTIONS('force'='true') --option to be incremental or always load all files

-- COMMAND ----------

-- MAGIC %sql
-- MAGIC CREATE TABLE IF NOT EXISTS plotly_iot_dashboard.silver_users
-- MAGIC (
-- MAGIC userid BIGINT GENERATED BY DEFAULT AS IDENTITY,
-- MAGIC gender STRING,
-- MAGIC age INT,
-- MAGIC height DECIMAL(10,2), 
-- MAGIC weight DECIMAL(10,2),
-- MAGIC smoker STRING,
-- MAGIC familyhistory STRING,
-- MAGIC cholestlevs STRING,
-- MAGIC bp STRING,
-- MAGIC risk DECIMAL(10,2),
-- MAGIC input_file_name STRING,
-- MAGIC update_timestamp TIMESTAMP
-- MAGIC )
-- MAGIC USING DELTA 
-- MAGIC TBLPROPERTIES("delta.targetFileSize"="128mb")
-- MAGIC --LOCATION s3://<path>/

-- COMMAND ----------

-- MAGIC %sql
-- MAGIC MERGE INTO plotly_iot_dashboard.silver_users AS target
-- MAGIC USING (SELECT 
-- MAGIC       userid::int,
-- MAGIC       gender::string,
-- MAGIC       age::int,
-- MAGIC       height::decimal, 
-- MAGIC       weight::decimal,
-- MAGIC       smoker,
-- MAGIC       familyhistory,
-- MAGIC       cholestlevs,
-- MAGIC       bp,
-- MAGIC       risk,
-- MAGIC       input_file_name,
-- MAGIC       update_timestamp
-- MAGIC       FROM plotly_iot_dashboard.bronze_users) AS source
-- MAGIC ON source.userid = target.userid
-- MAGIC WHEN MATCHED THEN UPDATE SET 
-- MAGIC   target.gender = source.gender,
-- MAGIC       target.age = source.age,
-- MAGIC       target.height = source.height, 
-- MAGIC       target.weight = source.weight,
-- MAGIC       target.smoker = source.smoker,
-- MAGIC       target.familyhistory = source.familyhistory,
-- MAGIC       target.cholestlevs = source.cholestlevs,
-- MAGIC       target.bp = source.bp,
-- MAGIC       target.risk = source.risk,
-- MAGIC       target.input_file_name = source.input_file_name,
-- MAGIC       target.update_timestamp = source.update_timestamp
-- MAGIC WHEN NOT MATCHED THEN INSERT *;
-- MAGIC 
-- MAGIC --Truncate bronze batch once successfully loaded
-- MAGIC TRUNCATE TABLE plotly_iot_dashboard.bronze_users;

-- COMMAND ----------

-- MAGIC %sql
-- MAGIC 
-- MAGIC SELECT * FROM plotly_iot_dashboard.silver_users;

-- COMMAND ----------

-- MAGIC %sql
-- MAGIC 
-- MAGIC SELECT * FROM plotly_iot_dashboard.silver_sensors;
